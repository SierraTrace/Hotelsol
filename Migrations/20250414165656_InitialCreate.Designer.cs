// <auto-generated />
using System;
using HotelSol.hotelsol.modelo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelSol.Migrations
{
    [DbContext(typeof(HotelSolDbContext))]
    [Migration("20250414165656_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Factura", b =>
                {
                    b.Property<int>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdFactura"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("PrecioFactura")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("IdFactura");

                    b.HasIndex("ClienteId");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("HotelSol.hotelsol.modelo.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("TipoCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("HotelSol.hotelsol.modelo.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdEmpleado"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("IdEmpleado");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("HotelSol.hotelsol.modelo.Habitacion", b =>
                {
                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoHabitacionId")
                        .HasColumnType("int");

                    b.HasKey("Numero");

                    b.HasIndex("TipoHabitacionId");

                    b.ToTable("Habitaciones", (string)null);
                });

            modelBuilder.Entity("HotelSol.hotelsol.modelo.PrecioAlojamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("TipoAlojamiento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoHabitacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoHabitacionId");

                    b.ToTable("PrecioAlojamiento");
                });

            modelBuilder.Entity("HotelSol.hotelsol.modelo.PrecioNoche", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HabitacionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Temporada")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("HabitacionId");

                    b.ToTable("PreciosNoche", (string)null);
                });

            modelBuilder.Entity("HotelSol.hotelsol.modelo.Reserva", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdReserva"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("FacturaIdFactura")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaLlegada")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("HabitacionId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioAlojamientoGuardado")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("PrecioEstanciaGuardado")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("PrecioReservaGuardado")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Temporada")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TipoAlojamiento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdReserva");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FacturaIdFactura");

                    b.HasIndex("HabitacionId");

                    b.ToTable("Reservas", (string)null);
                });

            modelBuilder.Entity("HotelSol.hotelsol.modelo.Servicio", b =>
                {
                    b.Property<int>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdServicio"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("FacturaIdFactura")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdServicio");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FacturaIdFactura");

                    b.ToTable("Servicios", (string)null);
                });

            modelBuilder.Entity("TipoHabitacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("TiposHabitacion", (string)null);
                });

            modelBuilder.Entity("Factura", b =>
                {
                    b.HasOne("HotelSol.hotelsol.modelo.Cliente", "Cliente")
                        .WithMany("Facturas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("HotelSol.hotelsol.modelo.Habitacion", b =>
                {
                    b.HasOne("TipoHabitacion", "TipoHabitacion")
                        .WithMany("Habitaciones")
                        .HasForeignKey("TipoHabitacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoHabitacion");
                });

            modelBuilder.Entity("HotelSol.hotelsol.modelo.PrecioAlojamiento", b =>
                {
                    b.HasOne("TipoHabitacion", "TipoHabitacion")
                        .WithMany()
                        .HasForeignKey("TipoHabitacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoHabitacion");
                });

            modelBuilder.Entity("HotelSol.hotelsol.modelo.PrecioNoche", b =>
                {
                    b.HasOne("HotelSol.hotelsol.modelo.Habitacion", "Habitacion")
                        .WithMany("PreciosPorTemporada")
                        .HasForeignKey("HabitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habitacion");
                });

            modelBuilder.Entity("HotelSol.hotelsol.modelo.Reserva", b =>
                {
                    b.HasOne("HotelSol.hotelsol.modelo.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Factura", null)
                        .WithMany("ListaReservas")
                        .HasForeignKey("FacturaIdFactura")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HotelSol.hotelsol.modelo.Habitacion", "Habitacion")
                        .WithMany("Reservas")
                        .HasForeignKey("HabitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Habitacion");
                });

            modelBuilder.Entity("HotelSol.hotelsol.modelo.Servicio", b =>
                {
                    b.HasOne("HotelSol.hotelsol.modelo.Cliente", "Cliente")
                        .WithMany("Servicios")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Factura", null)
                        .WithMany("ListaServicios")
                        .HasForeignKey("FacturaIdFactura")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Factura", b =>
                {
                    b.Navigation("ListaReservas");

                    b.Navigation("ListaServicios");
                });

            modelBuilder.Entity("HotelSol.hotelsol.modelo.Cliente", b =>
                {
                    b.Navigation("Facturas");

                    b.Navigation("Reservas");

                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("HotelSol.hotelsol.modelo.Habitacion", b =>
                {
                    b.Navigation("PreciosPorTemporada");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("TipoHabitacion", b =>
                {
                    b.Navigation("Habitaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
